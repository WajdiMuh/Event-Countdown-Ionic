{"version":3,"file":"src_app_pages_eventlist_eventlist_module_ts.js","mappings":"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","sources":["./src/app/pages/eventlist/eventlist-routing.module.ts","./src/app/pages/eventlist/eventlist.module.ts","./src/app/pages/eventlist/eventlist.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EventlistPage } from './eventlist.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventlistPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventlistPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventlistPageRoutingModule } from './eventlist-routing.module';\n\nimport { EventlistPage } from './eventlist.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EventlistPageRoutingModule\n  ],\n  declarations: [EventlistPage]\n})\nexport class EventlistPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Event } from '../../classes/Event';\nimport { AlertController } from '@ionic/angular';\nimport { ToastController } from '@ionic/angular';\nimport { EventsService } from '../../events.service';\nimport * as moment from 'moment';\nimport { Platform } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-eventlist',\n  templateUrl: './eventlist.page.html',\n  styleUrls: ['./eventlist.page.scss'],\n})\nexport class EventlistPage implements OnInit {\n  finishedloading:Boolean = false;\n  eventlist:Event[] = [];\n  constructor(public alertController: AlertController, public toastController: ToastController ,private eventservice:EventsService, public platform: Platform, private router: Router) { }\n\n  ngOnInit() {\n    this.eventservice.getAllEvents().subscribe(result => {\n      this.eventlist = result;\n      this.finishedloading = true;\n    },error => {\n      this.finishedloading = true;\n    });\n  }\n\n  refresh(event){\n    this.eventservice.getAllEvents().subscribe(result => {\n      this.eventlist = result;\n      event.target.complete();\n    },error => {\n      event.target.complete();\n    });\n  }\n\n  eventclick(event:Event){\n    this.router.navigate(['/countdown', event]);\n  }\n\n  delete(event:Event){\n    this.finishedloading = false;\n    this.eventservice.deleteEvent(event).subscribe(result => {\n      this.finishedloading = true;\n      this.eventlist = result;\n    },error => {\n      this.finishedloading = true;\n    });\n  }\n\n  async edit(event:Event){\n    const alert = await this.alertController.create({\n      cssClass: '',\n      header: 'Edit Event',\n      inputs: [\n        {\n          name: 'title',\n          type: 'text',\n          placeholder: 'Title',\n          value: event.title\n        },\n        {\n          name: 'date',\n          type: 'datetime-local',\n          min: moment().format(\"yyyy-MM-DD\") + \"T00:00:00\",\n          value: moment(event.date).format(\"yyyy-MM-DDTHH:mm:ss.SSS\")\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n          }\n        }, {\n          text: 'Edit',\n          handler: async (inputs) => {\n            if(inputs.title == \"\" || inputs.date == \"\"){\n              const toast = await this.toastController.create({\n                message: 'Either the title or date is not set',\n                duration: 2000\n              });\n              toast.present();\n            }else if(moment(inputs.date).isBefore(moment())){\n              const toast = await this.toastController.create({\n                message: 'The date is in the past',\n                duration: 2000\n              });\n              toast.present();\n            }else{\n              this.finishedloading = false;\n              this.eventservice.editEvent(event,inputs.title,moment(inputs.date).format(\"yyyy-MM-DDTHH:mm:ssZ\")).subscribe(result => {\n                this.finishedloading = true;\n                this.eventlist = result;\n              },error => {\n                this.finishedloading = true;\n              });\n            }\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  async add(){\n    const alert = await this.alertController.create({\n      cssClass: '',\n      header: 'Add Event',\n      inputs: [\n        {\n          name: 'title',\n          type: 'text',\n          placeholder: 'Title'\n        },\n        {\n          name: 'date',\n          type: 'datetime-local',\n          min: moment().format(\"yyyy-MM-DD\") + \"T00:00:00\",\n          value: moment().format(\"yyyy-MM-DDTHH:mm:ss.SSS\")\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n          }\n        }, {\n          text: 'Add',\n          handler: async (inputs) => {\n            if(inputs.title == \"\" || inputs.date == \"\"){\n              const toast = await this.toastController.create({\n                message: 'Either the title or date is not set',\n                duration: 2000\n              });\n              toast.present();\n            }else if(moment(inputs.date).isBefore(moment())){\n              const toast = await this.toastController.create({\n                message: 'The date is in the past',\n                duration: 2000\n              });\n              toast.present();\n            }else{\n              this.finishedloading = false;\n              this.eventservice.addEvent(inputs.title,moment(inputs.date).format(\"yyyy-MM-DDTHH:mm:ssZ\")).subscribe(result => {\n                this.finishedloading = true;\n                this.eventlist = result;\n              },error => {\n                this.finishedloading = true;\n              });\n            }\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}