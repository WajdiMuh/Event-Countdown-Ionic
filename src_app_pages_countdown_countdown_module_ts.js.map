{"version":3,"file":"src_app_pages_countdown_countdown_module_ts.js","mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9EyC;AAClC,6BAA6B,iDAAS;AAC7C,uCAAuC,qDAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5C4C;AACM;AAC3C,2BAA2B,2DAAc,CAAC,qDAAW;AACrD;;;;;;;;;;;;;;;;ACH6B;AAC7B;AACP,YAAY,iDAAO;AACnB","sources":["./src/app/pages/countdown/countdown-routing.module.ts","./src/app/pages/countdown/countdown.module.ts","./src/app/pages/countdown/countdown.page.ts","./node_modules/rxjs/_esm2015/internal/Scheduler.js","./node_modules/rxjs/_esm2015/internal/observable/interval.js","./node_modules/rxjs/_esm2015/internal/scheduler/Action.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/async.js","./node_modules/rxjs/_esm2015/internal/util/isNumeric.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CountdownPage } from './countdown.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CountdownPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CountdownPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CountdownPageRoutingModule } from './countdown-routing.module';\n\nimport { CountdownPage } from './countdown.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CountdownPageRoutingModule\n  ],\n  declarations: [CountdownPage]\n})\nexport class CountdownPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Event } from '../../classes/Event';\nimport * as moment from 'moment';\nimport { EventsService } from '../../events.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { interval, Subscription } from 'rxjs';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\n@Component({\n  selector: 'app-countdown',\n  templateUrl: './countdown.page.html',\n  styleUrls: ['./countdown.page.scss'],\n})\nexport class CountdownPage implements OnInit,OnDestroy {\n  finishedloading:Boolean = false;\n  latestevent:Event = undefined;\n  receivedevent:Event = undefined;\n  daysleft: string = \"\";\n  subscription: Subscription;\n  constructor(private eventservice:EventsService,private route: ActivatedRoute ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if(params.id == undefined){\n        this.eventservice.getLatestEvent().subscribe(result => {\n          this.subscription = interval(1000).subscribe(x => {\n              this.recalculate();\n          });\n          this.latestevent = result;\n          this.recalculate();\n          this.finishedloading = true;\n          this.makelocalnotification(result);\n        },error => {\n          this.finishedloading = true;\n          this.makelocalnotification();\n        });\n      }else{\n        this.subscription = interval(1000).subscribe(x => {\n          this.recalculate();\n        });\n        this.latestevent = {id:parseInt(params.id),title:params.title, date: new Date(params.date)};\n        this.receivedevent = this.latestevent;\n        this.recalculate();\n        this.finishedloading = true;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.subscription != undefined){\n      this.subscription.unsubscribe();\n    }\n  }\n\n  refresh(event){\n    if(this.receivedevent == undefined){\n      this.eventservice.getLatestEvent().subscribe(result => {\n        this.latestevent = result;\n        this.recalculate();\n        event.target.complete();\n        this.makelocalnotification(result);\n      },error => {\n        event.target.complete();\n        this.makelocalnotification();\n      });\n    }else{\n      this.latestevent = this.receivedevent;\n      this.recalculate();\n      event.target.complete();\n    }\n  }\n\n  recalculate(){\n    let eventdatemoment: moment.Moment = moment(this.latestevent.date);\n    var ms = eventdatemoment.diff(moment());\n    var d = moment.duration(ms);\n    this.daysleft =  `Years: ${d.years()}, Months: ${d.months()}, Days: ${d.days()}, Hours: ${d.hours()}, Minutes: ${d.minutes()}, Seconds: ${d.seconds()}`;\n    if(this.receivedevent == undefined && d.milliseconds() <= 0){\n      this.finishedloading = false;\n      this.eventservice.getLatestEvent().subscribe(result => {\n        this.latestevent = result;\n        this.recalculate();\n        this.finishedloading = true;\n        this.makelocalnotification(result);\n      },error => {\n        this.finishedloading = true;\n        this.makelocalnotification();\n      });\n    }\n  }\n\n  makelocalnotification(event?:Event){\n    LocalNotifications.getPending().then((pendingresult) =>{\n      if(pendingresult.notifications.length == 0){\n        if(event != null){\n          LocalNotifications.schedule({\n            notifications:[\n              {\n                id:event.id,\n                title:\"Upcoming Event\",\n                body:event.title,\n                schedule:{\n                  at: event.date,\n                }\n              }\n            ]\n          });\n        }\n      }else{\n        LocalNotifications.cancel({\n          notifications:[\n            {\n              id:pendingresult.notifications[0].id\n            }\n          ]\n        }).then(() => {\n          if(event != null){\n            LocalNotifications.schedule({\n              notifications:[\n                {\n                  id:event.id,\n                  title:\"Upcoming Event\",\n                  body:event.title,\n                  schedule:{\n                    at: event.date,\n                  }\n                }\n              ]\n            });\n          }\n        })\n      }\n    });\n  }\n\n}\n","export class Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = () => Date.now();\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        this.active = false;\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n"],"names":[],"sourceRoot":"webpack:///"}